.. _ChIP-seq:

ChIP-seq
========

What it does
------------

The ChIP-seq pipeline takes one or more BAM files and attempts to find peaks. If multiple samples and a sample sheet are provided, then CSAW is additionally used to call differential peaks. Both sharp and broad peak calling are supported.

.. image:: ../images/ChIPseq_pipeline.png

In addition to peaks, bigWig tracks are also generated.

Input requirements
------------------

The DNA mapping pipeline generates output that is fully compatible with the ChIP-seq pipeline input requirements!
When running the ChIP-seq pipeline, please specify the output directory of DNA-mapping pipeline as the working directory (-w).

If you need to provides file **NOT** generated by the DNA-mapping pipeline, then you must provide a directory with the following structure::

    .
    ├── deepTools_qc
    │   └── bamPEFragmentSize
    │       ├── fragmentSize.metric.tsv
    │       └── fragmentSizes.png
    ├── filtered_bam
    │   ├── sample1.filtered.bam
    │   ├── sample1.filtered.bam.bai
    │   ├── sample2.filtered.bam
    │   └── sample2.filtered.bam.bai
    ├── Picard_qc
    │   └── AlignmentSummaryMetrics
    │       ├── sample1.alignment_summary_metrics.txt
    │       └── sample2.alignment_summary_metrics.txt
    ├── Sambamba
    │   ├── flagstat_report_all.tsv
    │   ├── sample1.markdup.txt
    │   └── sample2.markdup.txt
    └── sampleSheet.yaml

The `filtered_bam` directory contains either filtered or unfiltered BAM files, however you prefer. `deepTools_qc` contains the output of bamPEFragmentSize from deepTools and `Picard_qc` contains the output from AlignmentSummaryMetrics from picard. The `Sambamba` directory contains the output of `sambamba flagstat` (the `.markdup.txt` files) and a single file summarizing that with columns `sample` (sample name, such as sampl1), `total` (total reads), `dup` (number of duplicate reads), and `mapped` (number of mapped reads).

`sampleSheet.tsv` is only needed for differential accessibility.

Sample configuration
~~~~~~~~~~~~~~~~~~~~

The ChIP-seq sample configuration yaml file describes what type of peak calling to perform on each sample and what sample to use as input::

    chip_dict:
      SRR6761497:
        control: SRR6761502
        broad: True
      SRR6761498:
        control: SRR6761502
        broad: True
      SRR6761495:
        control: SRR6761502
        broad: False
      SRR6761499:
        control: SRR6761502
        broad: False

As you can see, the same control can be used for all samples.

Sample sheet
~~~~~~~~~~~~

The (optional) sample sheet is a tab-separated file with two columns, named name and condition. An example is below::

    name    condition
    sample1 eworo
    sample2 eworo
    SRR7013047      eworo
    SRR7013048      OreR
    SRR7013049      OreR
    SRR7013050      OreR


Configuration file
~~~~~~~~~~~~~~~~~~

There is a configuration file in `snakePipes/workflows/ChIP-seq/defaults.yaml`::

    pipeline: chip-seq
    configfile:
    cluster_configfile:
    local: false
    max_jobs: 5
    ## workingdir need to be required DNA-mapping output dir, 'outdir' is set to workingdir internally
    workingdir:
    ## preconfigured target genomes (mm9,mm10,dm3,...) , see /path/to/snakemake_workflows/shared/organisms/
    ## Value can be also path to your own genome config file!
    genome:
    ## paired end data?
    paired: true
    ## Bin size of output files in bigWig format
    bw_binsize: 25
    ## Median/mean fragment length, only relevant for single-end data (default: 200)
    fragment_length: 200
    verbose: false
    # sampleInfo_DB
    sample_info:
    # window_size
    window_size: 150

The only parameters that are useful to change are `bw_binsize`, `fragment_length`, and `window_size`. Note however that those can be more conveniently changed on the command line.

Structure of output directory
-----------------------------

The ChIP-seq pipeline will generate additional output as follows::

    .
    ├── deepTools_ChIP
    │   ├── bamCompare
    │   │   ├── sample1.filtered.log2ratio.over_SRR6761502.bw
    │   │   ├── sample1.filtered.subtract.SRR6761502.bw
    │   │   ├── sample2.filtered.log2ratio.over_SRR6761502.bw
    │   │   └── sample2.filtered.subtract.SRR6761502.bw
    │   └── plotFingerprint
    │       ├── plotFingerprint.metrics.txt
    │       └── plotFingerprint.png
    ├── histoneHMM
    │   ├── sample2.filtered.histoneHMM-em-posterior.txt.gz
    │   ├── sample2.filtered.histoneHMM-regions.gff.gz
    │   ├── sample2.filtered.histoneHMM-regions.gff.gz.tbi
    │   ├── sample2.filtered.histoneHMM.txt.gz
    │   ├── sample2.filtered.histoneHMM-zinba-emfit.pdf
    │   ├── sample2.filtered.histoneHMM-zinba-params-em.RData
    │   └── sample2.filtered.histoneHMM-zinba-params-em.txt
    └── MACS2
        ├── sample1.filtered.BAM_peaks.narrowPeak
        ├── sample1.filtered.BAM_peaks.qc.txt
        ├── sample1.filtered.BAM_peaks.xls
        ├── sample1.filtered.BAMPE_peaks.narrowPeak
        ├── sample1.filtered.BAMPE_peaks.xls
        ├── sample1.filtered.BAMPE_summits.bed
        ├── sample1.filtered.BAM_summits.bed
        ├── sample2.filtered.BAM_peaks.broadPeak
        ├── sample2.filtered.BAM_peaks.gappedPeak
        ├── sample2.filtered.BAM_peaks.qc.txt
        ├── sample2.filtered.BAM_peaks.xls
        ├── sample2.filtered.BAMPE_peaks.broadPeak
        ├── sample2.filtered.BAMPE_peaks.gappedPeak
        └── sample2.filtered.BAMPE_peaks.xls

The `histoneHMM` directory will only exist if you have broad marks. There may be an additional `CSAW` folder if you provide a sample sheet.

Command line options
--------------------

.. argparse::
    :func: parse_args
    :filename: ../snakePipes/workflows/ChIP-seq/ChIP-seq
    :prog: ChIP-seq
    :nodefault:
